import { Component, Input, OnInit } from '@angular/core';
import { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';
import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';
import { GlobalService } from '@shared/services/global.service';

import { SmartContractsServiceBase } from '../../../smart-contracts.service';

export enum Mode { Call, Create, IssueToken, IssueEvent }
export class Parameter {
    constructor(public type: number, public value: string) { }
}

@Component({
    selector: 'app-event-transaction',
    templateUrl: './event-transaction.component.html',
    styleUrls: ['./event-transaction.component.css']
})
export class EventTransactionComponent implements OnInit {
    @Input() mode: Mode;
    walletName: string;

    constructor(private globalService: GlobalService, private smartContractsService: SmartContractsServiceBase,
        private activeModal: NgbActiveModal, private formBuilder: FormBuilder) { }

    // tslint:disable-next-line: max-line-length
    newTokenByteCode
    newEventByteCode
    modeEnum = Mode;
    transactionForm: FormGroup;
    parameterTypes: Parameter[] = [
        new Parameter(1, 'Bool'),
        new Parameter(2, 'Byte'),
        new Parameter(3, 'Char'),
        new Parameter(4, 'String'),
        new Parameter(5, 'UInt'),
        new Parameter(6, 'Int'),
        new Parameter(7, 'ULong'),
        new Parameter(8, 'Long'),
        new Parameter(9, 'Address'),
        new Parameter(10, 'Byte Array')
    ];
    parameters: FormArray;
    selectedSenderAddress = '';
    balance = 0;
    amount: FormControl;
    feeAmount: FormControl;
    gasPrice: FormControl;
    gasLimit: FormControl;
    methodName: FormControl;
    contractAddress: FormControl;
    contractCode: FormControl;
    password: FormControl;
    totalSupply: FormControl;
    tokenName: FormControl;
    tokenSymbol: FormControl;
    ticketsAmount: FormControl;
    auctionDuration: FormControl;
    maxPrice: FormControl;
    minPrice: FormControl;

    coinUnit: string;
    loading: boolean;
    apiError: string;

    gasCallLimitMinimum = 10000;
    gasCreateLimitMinimum = 12000;
    gasCreateTokenLimitMinimum = 15000;
    gasLimitMaximum = 100000;
    gasPriceMinimum = 1;
    gasPriceMaximum = 10000;

    get title(): string { return `${this.modeText}`; }
    get buttonText(): string { return `${this.modeText}`; }

    private get modeText(): string {
        switch (this.mode) {
            case Mode.Call:
                return this.loading ? 'Calling Contract' : 'Call Contract';
            case Mode.Create:
                return this.loading ? 'Creating Contract' : 'Create Contract';
            case Mode.IssueToken:
                return this.loading ? 'Issuing Token' : 'Issue Token';
            case Mode.IssueEvent:
                return this.loading ? 'Creating the Event' : 'Create the Event';
            default:
                return 'Unknown';
        }
    }

    ngOnInit() {
        this.registerControls();
        this.walletName = this.globalService.getWalletName();
    }

    closeClicked() {
        this.activeModal.close();
    }

    addParameterClicked() {
        this.parameters.push(this.createParameter());
    }

    createParameter(): FormGroup {
        const defaultType = this.parameterTypes.length ? this.parameterTypes[0].type : 1;

        return this.formBuilder.group({
            type: defaultType,
            value: ''
        });
    }

    removeParameterClicked(index: number) {
        this.parameters.removeAt(index);
    }

    onSubmit() {
        // Hack the parameters into a format the API expects
        const result = this.createModel();

        this.loading = true;

        // We don't need an observable here so let's treat it as a promise.
        (this.mode === Mode.Create || this.mode === Mode.IssueToken || this.mode === Mode.IssueEvent
            ? this.smartContractsService.PostCreate(result)
            : this.smartContractsService.PostCall(result))
            .toPromise()
            .then(transactionHash => {
                this.loading = false;
                this.activeModal.close({ symbol: this.tokenSymbol.value.toUpperCase(), name: this.tokenName.value, transactionHash });
            },
                error => {
                    this.loading = false;
                    if (!error.error.errors) {
                        if (error.error.value.message) {
                            this.apiError = error.error.value.message;
                        } else {
                            console.log(error);
                        }
                    } else {
                        this.apiError = error.error.errors[0].message;
                    }
                });
    }

    private createModel() {

        //if (this.mode === Mode.IssueToken) {
        //    return {
        //        amount: this.amount.value,
        //        feeAmount: this.feeAmount.value,
        //        gasPrice: this.gasPrice.value,
        //        gasLimit: this.gasLimit.value,
        //        //ulong ticketsAmount, string name, string symbol, ulong auctiontBlockDuration, ulong maxPrice, ulong minPrice

        //        parameters: [
        //            `7#${this.ticketsAmount.value}`,
        //            `4#${this.tokenName.value}`,
        //            `4#${this.tokenSymbol.value.toUpperCase()}`,
        //            `7#${this.auctionDuration.value}`,
        //            `7#${this.maxPrice.value*100000000}`,
        //            `7#${this.minPrice.value*100000000}`,
        //        ],
        //        contractCode: this.newTokenByteCode,
        //        password: this.password.value,
        //        walletName: this.walletName,
        //        sender: this.selectedSenderAddress
        //    };
        //}

        if (this.mode === Mode.IssueEvent) {
            return {
                amount: this.amount.value,
                feeAmount: this.feeAmount.value,
                gasPrice: this.gasPrice.value,
                gasLimit: this.gasLimit.value,
                parameters: [
                    `7#${this.ticketsAmount.value}`,
                    `4#${this.tokenName.value}`,
                    `4#${this.tokenSymbol.value.toUpperCase()}`,
                    `7#${this.auctionDuration.value}`,
                    `7#${this.maxPrice.value * 100000000}`,
                    `7#${this.minPrice.value * 100000000}`,
                ],
                contractCode: this.newEventByteCode,
                password: this.password.value,
                walletName: this.walletName,
                sender: this.selectedSenderAddress
            };
        }

        return {
            ...this.transactionForm.value,
            parameters: this.transactionForm.value.parameters.map(p => `${p.type}#${p.value}`),
            walletName: this.walletName,
            sender: this.selectedSenderAddress
        };
    }

    private registerControls() {
        const amountValidator = control => Number(control.value) > this.balance ? { amountError: true } : null;
        const gasPriceTooLowValidator = control => Number(control.value) < this.gasPriceMinimum ? { gasPriceTooLowError: true } : null;
        const gasPriceTooHighValidator = control => Number(control.value) > this.gasPriceMaximum ? { gasPriceTooHighError: true } : null;
        const gasLimitMaximumValidator = control => Number(control.value) > this.gasLimitMaximum ? { gasLimitTooHighError: true } : null;
        // tslint:disable-next-line:max-line-length
        const gasCallLimitMinimumValidator = control => Number(control.value) < this.gasCallLimitMinimum ? { gasCallLimitTooLowError: true } : null;
        // tslint:disable-next-line:max-line-length
        const gasCreateLimitMinimumValidator = control => Number(control.value) < this.gasCreateLimitMinimum ? { gasCreateLimitTooLowError: true } : null;
        const oddValidator = control => String(control.value).length % 2 !== 0 ? { hasOddNumberOfCharacters: true } : null;

        const integerValidator = Validators.pattern('^[0-9][0-9]*$');

        const gasLimitValidator = (this.mode === Mode.Call ? gasCallLimitMinimumValidator : gasCreateLimitMinimumValidator);

        this.amount = new FormControl(0, [amountValidator, Validators.min(0)]);
        this.feeAmount = new FormControl(0.001, [Validators.required, amountValidator, Validators.min(0)]);
        // tslint:disable-next-line:max-line-length
        this.gasPrice = new FormControl(100, [Validators.required, integerValidator, Validators.pattern('^[+]?([0-9]{0,})*[.]?([0-9]{0,2})?$'), gasPriceTooLowValidator, gasPriceTooHighValidator, Validators.min(0)]);

        if (this.mode === Mode.Call) {
            // tslint:disable-next-line:max-line-length
            this.gasLimit = new FormControl(this.gasLimitMaximum, [Validators.required, integerValidator, Validators.pattern('^[+]?([0-9]{0,})*[.]?([0-9]{0,2})?$'), gasLimitValidator, gasLimitMaximumValidator, Validators.min(0)]);
        }

        if (this.mode === Mode.Create) {
            // tslint:disable-next-line:max-line-length
            this.gasLimit = new FormControl(this.gasLimitMaximum, [Validators.required, integerValidator, Validators.pattern('^[+]?([0-9]{0,})*[.]?([0-9]{0,2})?$'), gasLimitValidator, gasLimitMaximumValidator, Validators.min(0)]);
        }

        if (this.mode === Mode.IssueToken || this.mode === Mode.IssueEvent) {
            // tslint:disable-next-line:max-line-length
            this.gasLimit = new FormControl(this.gasLimitMaximum, [Validators.required, integerValidator, Validators.pattern('^[+]?([0-9]{0,})*[.]?([0-9]{0,2})?$'), gasLimitValidator, gasLimitMaximumValidator, Validators.min(0)]);
        }

        this.methodName = new FormControl('', [Validators.required, Validators.nullValidator]);
        var contractCode = this.mode === Mode.IssueToken ? this.newTokenByteCode : '';
        contractCode = this.mode === Mode.IssueEvent ? this.newEventByteCode : '';
        // tslint:disable-next-line:max-line-length
        this.contractCode = new FormControl(contractCode, [Validators.required, Validators.nullValidator, Validators.pattern('[0-9a-fA-F]*'), oddValidator]);
        this.parameters = new FormArray([]);
        this.password = new FormControl('', [Validators.required, Validators.nullValidator]);
        this.totalSupply = new FormControl(21 * 1000 * 1000, [Validators.min(1), Validators.required]);

        this.tokenName = new FormControl('New Event', [Validators.required]);
        this.tokenSymbol = new FormControl('ENT', [Validators.required]);

        this.ticketsAmount= new FormControl(3, [Validators.min(1), Validators.required]);;
        this.auctionDuration = new FormControl(5000, [Validators.min(1), Validators.required]);;
        this.maxPrice = new FormControl(20, [Validators.min(1), Validators.required]);;
        this.minPrice = new FormControl(10, [Validators.min(1), Validators.required]);;


        if (this.mode === Mode.Call) {
            this.contractAddress = new FormControl('', [Validators.required, Validators.nullValidator]);

            this.transactionForm = new FormGroup({
                amount: this.amount,
                feeAmount: this.feeAmount,
                gasPrice: this.gasPrice,
                gasLimit: this.gasLimit,
                parameters: this.parameters,
                methodName: this.methodName,
                contractAddress: this.contractAddress,
                password: this.password
            });
        } else if (this.mode === Mode.Create) {
            this.transactionForm = new FormGroup({
                amount: this.amount,
                feeAmount: this.feeAmount,
                gasPrice: this.gasPrice,
                gasLimit: this.gasLimit,
                parameters: this.parameters,
                contractCode: this.contractCode,
                password: this.password
            });
        } else if (this.mode === Mode.IssueToken || this.mode === Mode.IssueEvent) {
            this.transactionForm = new FormGroup({
                feeAmount: this.feeAmount,
                gasPrice: this.gasPrice,
                gasLimit: this.gasLimit,
                contractCode: this.contractCode,
                password: this.password,
                totalSupply: this.totalSupply,
                tokenName: this.tokenName,
                tokenSymbol: this.tokenSymbol,
                ticketsAmount: this.ticketsAmount,
                auctionDuration: this.auctionDuration,
                maxPrice: this.maxPrice,
                minPrice: this.minPrice
            });
        }
    }
}
